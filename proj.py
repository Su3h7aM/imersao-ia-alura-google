# -*- coding: utf-8 -*-
"""üíõ Projeto V2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WrmT2KHTEDh52kpFGH35slQTvpybn2jp
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip -q install google-genai

# Configura a API Key do Google Gemini

# import os
# from google.colab import userdata
#
# os.environ["GOOGLE_API_KEY"] = userdata.get('GOOGLE_API_KEY')

# # Instalar Framework ADK de agentes do Google ################################################
# !pip install -q google-adk

# Configura o cliente da SDK do Gemini

from google import genai

client = genai.Client()

MODEL_ID = "gemini-2.5-flash-preview-04-17"

from google.adk.agents import Agent
from google.adk.runners import Runner
from google.adk.sessions import InMemorySessionService
from google.adk.tools import google_search
from google.genai import types  # Para criar conte√∫dos (Content e Part)
from datetime import date
import textwrap  # Para formatar melhor a sa√≠da de texto
from IPython.display import display, Markdown  # Para exibir texto formatado no Colab
import requests  # Para fazer requisi√ß√µes HTTP
import warnings

warnings.filterwarnings("ignore")


# Fun√ß√£o auxiliar que envia uma mensagem para um agente via Runner e retorna a resposta final
def call_agent(agent: Agent, message_text: str) -> str:
    # Cria um servi√ßo de sess√£o em mem√≥ria
    session_service = InMemorySessionService()
    # Cria uma nova sess√£o (voc√™ pode personalizar os IDs conforme necess√°rio)
    session = session_service.create_session(
        app_name=agent.name, user_id="user1", session_id="session1"
    )
    # Cria um Runner para o agente
    runner = Runner(agent=agent, app_name=agent.name, session_service=session_service)
    # Cria o conte√∫do da mensagem de entrada
    content = types.Content(role="user", parts=[types.Part(text=message_text)])

    final_response = ""
    # Itera assincronamente pelos eventos retornados durante a execu√ß√£o do agente
    for event in runner.run(
        user_id="user1", session_id="session1", new_message=content
    ):
        if event.is_final_response():
            for part in event.content.parts:
                if part.text is not None:
                    final_response += part.text
                    final_response += "\n"
    return final_response


# Fun√ß√£o auxiliar para exibir texto formatado em Markdown no Colab
def to_markdown(text):
    text = text.replace("‚Ä¢", "  *")
    return Markdown(textwrap.indent(text, "> ", predicate=lambda _: True))


##########################################
# --- Agente 1: Buscador de Not√≠cias --- #
##########################################


def agente_buscador(area_atuacao, cliente, projeto, data_de_hoje):
    """
    Agente que busca not√≠cias e informa√ß√µes relevantes sobre a √°rea de atua√ß√£o,
    o cliente e o projeto, para contextualizar o briefing de design.
    """

    buscador = Agent(
        name="agente_buscador",
        model=MODEL_ID,
        description="Agente especializado em buscar informa√ß√µes relevantes para briefings de design.",
        instruction=f"""
        Voc√™ √© um assistente de pesquisa especializado em design.
        Sua tarefa √© usar a ferramenta de busca do Google (google_search) para coletar informa√ß√µes relevantes
        que ajudar√£o a contextualizar um briefing de design.

        Voc√™ deve buscar informa√ß√µes sobre:
        1.  **Tend√™ncias em {area_atuacao}:**
            * Recupere as √∫ltimas not√≠cias, artigos e estudos sobre tend√™ncias, inova√ß√µes e melhores pr√°ticas em {area_atuacao}.
            * Foque em informa√ß√µes que possam inspirar o processo de design e ajudar a definir a dire√ß√£o criativa.
        2.  **Informa√ß√µes sobre {cliente}:**
            * Busque informa√ß√µes sobre a empresa {cliente}, incluindo sua hist√≥ria, valores, identidade visual, produtos/servi√ßos e posicionamento no mercado.
            * Isso ajudar√° a garantir que o design esteja alinhado com a identidade da marca.
        3.  **Refer√™ncias para o projeto {projeto}:**
            * Procure por projetos de design semelhantes a {projeto} que possam servir de inspira√ß√£o ou refer√™ncia.
            * Analise o que funciona bem nesses projetos e o que pode ser evitado.

        Aten√ß√£o:
        * Priorize fontes confi√°veis e atualizadas.
        * Seja conciso e objetivo nas suas buscas.
        * Formate a sa√≠da de forma clara e organizada, usando t√≠tulos e listas quando apropriado.
        """,
    )

    entrada_do_agente_buscador = f"""
    √Årea de atua√ß√£o: {area_atuacao}
    Cliente: {cliente}
    Projeto: {projeto}
    Data de hoje: {data_de_hoje}
    """

    informacoes_relevantes = call_agent(buscador, entrada_do_agente_buscador)
    return informacoes_relevantes


################################################
# --- Agente 2: Analista de Insights --- #
################################################


def agente_analista(area_atuacao, cliente, projeto, informacoes_relevantes):
    """
    Agente que analisa as informa√ß√µes coletadas e fornece insights relevantes para o briefing.
    """

    analista = Agent(
        name="agente_analista",
        model=MODEL_ID,
        description="Agente especializado em analisar informa√ß√µes e fornecer insights para briefings de design.",
        tools=[],  # Este agente n√£o precisa de ferramentas externas
        instruction=f"""
        Voc√™ √© um analista de design experiente e perspicaz.
        Sua tarefa √© analisar as informa√ß√µes fornecidas sobre a √°rea de atua√ß√£o, o cliente, o projeto
        e as informa√ß√µes relevantes (tend√™ncias, informa√ß√µes sobre o cliente, refer√™ncias de projeto)
        e fornecer insights acion√°veis que ajudar√£o a orientar o briefing e o processo de design.

        Considere os seguintes aspectos em sua an√°lise:

        * **Tend√™ncias em {area_atuacao}:**
            * Identifique as principais tend√™ncias, inova√ß√µes e melhores pr√°ticas em {area_atuacao}.
            * Analise como essas tend√™ncias podem ser aplicadas ao projeto.
            * Destaque as oportunidades e desafios relacionados a essas tend√™ncias.
        * **Informa√ß√µes sobre {cliente}:**
            * Analise a hist√≥ria, os valores, a identidade visual, os produtos/servi√ßos e o posicionamento no mercado da empresa {cliente}.
            * Identifique como o design pode fortalecer a identidade da marca e se alinhar com seus objetivos de neg√≥cios.
            * Destaque os pontos fortes e fracos da marca em rela√ß√£o √† concorr√™ncia.
        * **Refer√™ncias para o projeto {projeto}:**
            * Analise os projetos de design semelhantes a {projeto} fornecidos como refer√™ncia.
            * Identifique os elementos de design que funcionam bem e os que podem ser evitados.
            * Destaque as oportunidades de inova√ß√£o e diferencia√ß√£o em rela√ß√£o aos projetos de refer√™ncia.

        Apresente sua an√°lise de forma clara, concisa e organizada, usando t√≠tulos e listas quando apropriado.
        Forne√ßa insights acion√°veis que possam ser usados para formular perguntas de briefing mais eficazes
        e orientar as decis√µes de design.
        """,
    )

    entrada_do_analista = f"""
    √Årea de atua√ß√£o: {area_atuacao}
    Cliente: {cliente}
    Projeto: {projeto}
    Informa√ß√µes Relevantes: {informacoes_relevantes}
    """

    analise_e_insights = call_agent(analista, entrada_do_analista)
    return analise_e_insights


################################################
# --- Agente 3: Gerador de Perguntas --- #
################################################


def agente_gerador_perguntas(area_atuacao, cliente, projeto, informacoes_relevantes):
    """
    Agente que gera perguntas detalhadas para o briefing com o cliente,
    integrando informa√ß√µes relevantes obtidas pelo agente_buscador.
    """

    gerador_perguntas = Agent(
        name="agente_gerador_perguntas",
        model=MODEL_ID,
        description="Agente especializado em gerar perguntas eficazes para briefings de design, considerando o contexto.",
        tools=[],  # Este agente n√£o precisa de ferramentas externas
        instruction="""
        Voc√™ √© um especialista em design e condu√ß√£o de briefings.
        Sua tarefa √© gerar uma lista de perguntas detalhadas e eficazes para um briefing com o cliente.

        Use as informa√ß√µes fornecidas sobre a √°rea de atua√ß√£o, o cliente, o projeto e as informa√ß√µes relevantes
        para gerar perguntas que cubram todos os aspectos relevantes do projeto.

        As Informa√ß√µes Relevantes s√£o muito importantes, use-as para guiar a sua gera√ß√£o de perguntas
        e deixe claro para o usu√°rio que voc√™ est√° utilizando elas.

        Considere os seguintes t√≥picos ao gerar as perguntas:

        * **Objetivos do Projeto:**
            * Pergunte sobre os objetivos gerais do projeto, os resultados esperados e os indicadores de sucesso.
        * **P√∫blico-alvo:**
            * Investigue quem √© o p√∫blico-alvo do projeto, suas necessidades, desejos e prefer√™ncias.
        * **Mensagem e Tom de Voz:**
            * Explore a mensagem que o projeto deve transmitir e o tom de voz apropriado.
        * **Concorrentes:**
            * Pergunte sobre os principais concorrentes e o que diferencia o projeto deles.
        * **Requisitos T√©cnicos:**
            * Averigue os requisitos t√©cnicos, restri√ß√µes e limita√ß√µes do projeto.
        * **Or√ßamento e Cronograma:**
            * Discuta o or√ßamento dispon√≠vel e o cronograma do projeto.
        * **Informa√ß√µes Relevantes:**
            * Use as informa√ß√µes relevantes (tend√™ncias, informa√ß√µes sobre o cliente, etc.) para gerar perguntas mais espec√≠ficas e aprofundadas.
            * **Destaque como as informa√ß√µes relevantes influenciam as perguntas.**

        Formate a sa√≠da como uma lista numerada ou com marcadores.
        Seja claro, conciso e objetivo em suas perguntas.
        """,
    )

    entrada_do_gerador_perguntas = f"""
    √Årea de atua√ß√£o: {area_atuacao}
    Cliente: {cliente}
    Projeto: {projeto}
    Informa√ß√µes Relevantes: {informacoes_relevantes}
    """

    perguntas_briefing = call_agent(gerador_perguntas, entrada_do_gerador_perguntas)
    return perguntas_briefing


################################################
# --- Agente 4: Apresentador/Revisor --- #
################################################


def agente_apresentador(perguntas_briefing, area_atuacao, cliente, projeto):
    """
    Agente que apresenta as perguntas do briefing ao usu√°rio,
    permite a revis√£o e formata a lista final.
    """

    apresentador = Agent(
        name="agente_apresentador",
        model=MODEL_ID,
        description="Agente que apresenta, revisa e formata as perguntas do briefing.",
        tools=[],  # Este agente n√£o precisa de ferramentas externas
        instruction="""
        Voc√™ √© um assistente de design experiente em revisar e aprimorar perguntas de briefing.
        Sua tarefa √© revisar a lista de perguntas fornecida e apresentar uma vers√£o final e otimizada.

        Considere as melhores pr√°ticas para briefings de design ao revisar:
        * Tornar as perguntas mais espec√≠ficas e claras.
        * Garantir que todas as √°reas relevantes sejam cobertas.
        * Usar um tom adequado.
        * Evitar jarg√µes.

        Apresente a lista final de perguntas de forma clara e organizada, usando uma lista numerada ou com marcadores.
        N√£o inclua explica√ß√µes sobre as altera√ß√µes realizadas.
        """,
    )

    entrada_do_apresentador = f"""
    √Årea de atua√ß√£o: {area_atuacao}
    Cliente: {cliente}
    Projeto: {projeto}
    Perguntas do Briefing: {perguntas_briefing}

    Por favor, revise as perguntas e fa√ßa as altera√ß√µes necess√°rias.
    """

    perguntas_revisadas = call_agent(apresentador, entrada_do_apresentador)
    return perguntas_revisadas


from datetime import date

print("üöÄ Iniciando o Sistema de Cria√ß√£o de Briefing de Design com 4 Agentes üöÄ")

# --- Obter as Informa√ß√µes Iniciais do Usu√°rio ---
# area_atuacao()

# if opcao_fluxo == "criar":
#  cliente, projeto = obter_informacoes_projeto()  # Fun√ß√£o para obter cliente e projeto
# else:
#  print("Funcionalidade de an√°lise de briefing ainda n√£o implementada.")
#  exit()

data_de_hoje = date.today().strftime("%d/%m/%Y")

# Inserir l√≥gica do sistema de agentes ################################################

area_atuacao = input("Qual √© sua √°rea de atua√ß√£o ?")
cliente = input("Qual √© o seu nome?")
projeto = input("O que √© o seu projeto]?")

if not (area_atuacao and cliente and projeto):
    print("Voc√™ esqueceu de fornecer alguma informa√ß√£o essencial!")
else:
    print(f"Maravilha! Vamos ent√£o criar o briefing para {cliente} sobre {projeto}")

    informacoes_relevantes = agente_buscador(
        area_atuacao, cliente, projeto, data_de_hoje
    )
    print("\n--- üìù Resultado do Agente 1 (Buscador) ---\n")
    print(informacoes_relevantes)  # Substitu√≠ display(to_markdown()) por print()
    print("--------------------------------------------------------------")

    analise_e_insights = agente_analista(
        area_atuacao, cliente, projeto, informacoes_relevantes
    )
    print("\n--- üìù Resultado do Agente 2 (Analista) ---\n")
    print(analise_e_insights)  # Substitu√≠ display(to_markdown()) por print()
    print("--------------------------------------------------------------")

    perguntas_briefing = agente_gerador_perguntas(
        area_atuacao, cliente, projeto, analise_e_insights
    )
    print("\n--- üìù Resultado do Agente 3 (Gerador de Perguntas) ---\n")
    print(perguntas_briefing)  # Substitu√≠ display(to_markdown()) por print()
    print("--------------------------------------------------------------")

    perguntas_revisadas = agente_apresentador(
        perguntas_briefing, area_atuacao, cliente, projeto
    )
    print("\n--- üìù Resultado do Agente 4 (Apresentador/Revisor) ---\n")
    print(perguntas_revisadas)  # Substitu√≠ display(to_markdown()) por print()
    print("--------------------------------------------------------------")

    # aexibir_ou_salvar_resultado(perguntas_revisadas, "perguntas_briefing")  # Chame a fun√ß√£o para exibir/salvar
